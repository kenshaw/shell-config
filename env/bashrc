# ----[ exit if not interactive ]-----------------------------
[ -z "$PS1" ] && return
# ------------------------------------------------------------


# ----[ general bash settings ]-------------------------------
# ignore commands with leading spaces and duplicates
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# check window size after each command, and update LINES/COLUMNS
shopt -s checkwinsize

# enable vi mode
set -o vi

# platform
PLATFORM=$(uname|sed -e 's/_.*//'|tr '[:upper:]' '[:lower:]'|sed -e 's/^\(msys\|mingw\).*/windows/')
# ------------------------------------------------------------


# ----[ platform specific settings ]--------------------------
case $PLATFORM in
  linux)
    export EDITOR=/etc/alternatives/editor
    export JAVA_HOME=/usr/lib/jvm/java-8-oracle
  ;;

  darwin)
    # to fix scripts:
    # sudo port install coreutils gawk gsed
    alias ls='ls -G'
    alias vi='nvim'
    alias vim='nvim'

    export TERM=xterm-256color
    export MANPAGER=/opt/local/bin/less
    export EDITOR=/opt/local/bin/nvim
    export JAVA_HOME=$(/usr/libexec/java_home)

    [ -d /opt/local/libexec/gnubin ] && \
      export PATH=/opt/local/libexec/gnubin:$PATH

    [ -d /opt/local/bin ] && \
      export PATH=/opt/local/bin:/opt/local/sbin:$PATH

    [ -d /usr/local/lib/pkgconfig ] && \
      export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
  ;;

  windows)
    alias vi='vim'

    [ -d /mingw64/bin ] && \
      export PATH=/mingw64/bin:$PATH
  ;;
esac
# ------------------------------------------------------------


# ----[ bash prompt ]-----------------------------------------
[ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ] && \
  debian_chroot=$(cat /etc/debian_chroot)

# enable color prompt for specific TERMs
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
case $TERM in
  xterm*|screen*|linux*|rxvt*) PS1='\[\e]0;\u@\h: \w \a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ';;
esac
# ------------------------------------------------------------


# ----[ check/install vim-plug ]------------------------------
[ ! -e $HOME/.config/nvim/autoload/plug.vim ] && \
  curl -fLo $HOME/.config/nvim/autoload/plug.vim --create-dirs \
  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
# ------------------------------------------------------------


# ----[ color support for ls/*grep ]--------------------------
if [ ! -z "$(which dircolors)" ]; then
  test -r $HOME/.dircolors && eval "$(dircolors -b $HOME/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi
# ------------------------------------------------------------


# ----[ less config ]-----------------------------------------
[ ! -z "$(which lesspipe)" ] && \
  eval "$(SHELL=/bin/sh lesspipe)"

# use pygmentize with less and color
if [ ! -z "$(which pygmentize)" ]; then
  export LESSCOLOR=always
  export LESSOPEN="|pygmentize %s"
fi
# ------------------------------------------------------------


# ----[ z ]---------------------------------------------------
[ ! -d $HOME/src/shell-config/z ] && \
  git clone https://github.com/rupa/z.git $HOME/src/shell-config/z

source $HOME/src/shell-config/z/z.sh
# ------------------------------------------------------------


# ----[ go ]--------------------------------------------------
# primary go installation
if [ -d /usr/local/go/bin ]; then
  export GOPATH=$HOME/src/go
  export PATH=/usr/local/go/bin:$GOPATH/bin:$PATH

  [ -x /usr/local/go/misc/wasm/go_js_wasm_exec ] && \
    export PATH=$PATH:/usr/local/go/misc/wasm
fi

# secondary go installation for GOROOT_BOOTSTRAP
GOROOT_BOOTSTRAP=$(ls -d /usr/local/go-* 2> /dev/null|sort -r -V|head -1)
[ -d $GOROOT_BOOTSTRAP ] && \
  export GOROOT_BOOTSTRAP=$GOROOT_BOOTSTRAP
# ------------------------------------------------------------


# ----[ rust / cargo ]----------------------------------------
[ -d $HOME/.cargo/bin ] && \
  export PATH=$HOME/.cargo/bin:$PATH

[ ! -z "$(which rustc)" ] && \
  export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib:$LD_LIBRARY_PATH
# ------------------------------------------------------------


# ----[ oracle related ]--------------------------------------
export ORACLE_SID=xe

if [ -f /opt/oracle/oci8.pc ]; then
  export PKG_CONFIG_PATH=/opt/oracle:$PKG_CONFIG_PATH
  export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_1:$LD_LIBRARY_PATH
  export DYLD_LIBRARY_PATH=/opt/oracle/instantclient_12_1:$DYLD_LIBRARY_PATH
fi
# ------------------------------------------------------------


# ----[ chrome ]----------------------------------------------
[ -d $HOME/src/misc/chrome/depot_tools ] && \
  export PATH=$PATH:$HOME/src/misc/chrome/depot_tools

[ -f /opt/headless_shell/headless_shell ] && \
  export PATH=$PATH:/opt/headless_shell
# ------------------------------------------------------------


# ----[ qt ]--------------------------------------------------
if [ -d /media/src/Qt ]; then
  export QT_DIR=/media/src/Qt

  QTVER=$(ls -d $QT_DIR/5.*|sed -e "s%^$QT_DIR/%%"|sort -r -V|head -1)

  export PKG_CONFIG_PATH=$QT_DIR/$QTVER/gcc_64/lib/pkgconfig:$PKG_CONFIG_PATH
  export LD_LIBRARY_PATH=$QT_DIR/$QTVER/gcc_64/lib:$LD_LIBRARY_PATH
fi
# ------------------------------------------------------------


# ----[ java and tools ]--------------------------------------
# maven
if [ -d $HOME/src/jtools/maven ]; then
  export M2_HOME=$HOME/src/jtools/maven
  export M2=$M2_HOME/bin/
  export PATH=$PATH:$M2:$M2_HOME/bin
fi

# gradle
[ -d $HOME/src/jtools/gradle/bin ] && \
  export PATH=$PATH:$HOME/src/jtools/gradle/bin

# dex-tools
[ -e $HOME/src/jtools/dex-tools ] && \
  export DEXTOOLS_HOME=$HOME/src/jtools/dex-tools
# --------------------------------------------------------------


# ----[ android ]-----------------------------------------------
# android sdk
if [ -d $HOME/src/sdk/android-sdk-$PLATFORM/platform-tools ]; then
  export ANDROID_HOME=$(readlink -f $HOME/src/sdk/android-sdk-$PLATFORM)
  export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
  export PATH=$PATH:$ANDROID_HOME/platform-tools
fi
# ------------------------------------------------------------


# ----[ npm ]-------------------------------------------------
# npm "global" packages
[ -d $HOME/.npm-packages/bin ] && \
  export PATH=$PATH:$HOME/.npm-packages/bin

# node modules
[ -d $HOME/.npm-packages/lib/node_modules ] && \
  export NODE_PATH=$NODE_PATH:$HOME/.npm-packages/lib/node_modules

# auth token
[ -f $HOME/.npmtoken ] && \
  export NPM_TOKEN=$(cat $HOME/.npmtoken | tr -d '\n')
# ------------------------------------------------------------


# ----[ local paths ]-----------------------------------------
# custom scripts
[ -d $HOME/src/shell-config/scripts ] && \
  export PATH=$PATH:$HOME/src/shell-config/scripts

# pip and other locals
[ -d $HOME/.local/bin ] && \
  export PATH=$PATH:$HOME/.local/bin

# travis ci gem
[ -f $HOME/.travis/travis.sh ] && \
  source $HOME/.travis/travis.sh

# rvm scripts
[ -f $HOME/.rvm/scripts/rvm ] && \
  source $HOME/.rvm/scripts/rvm

# rvm bin
[ -d $HOME/.rvm/bin ] && \
  export PATH=$PATH:$HOME/.rvm/bin
# ------------------------------------------------------------


# ----[ bash aliases/completion ]-----------------------------
# custom aliases
[ -f $HOME/.bash_aliases ] && \
  source $HOME/.bash_aliases

# system wide completion
[ -f /etc/bash_completion ] && \
  ! shopt -oq posix && source /etc/bash_completion

# custom bash completions
if [ -d $HOME/src/shell-config/env/bash-completion.d/ ]; then
  for i in $HOME/src/shell-config/env/bash-completion.d/*; do
    source $i
  done
fi

# google sdk bash completion
[ -f $HOME/src/sdk/google-cloud-sdk/completion.bash.inc ] && \
  source $HOME/src/sdk/google-cloud-sdk/completion.bash.inc
[ -f $HOME/src/sdk/google-cloud-sdk/path.bash.inc ] && \
  source $HOME/src/sdk/google-cloud-sdk/path.bash.inc

# kubectl
[ ! -z "$(which kubectl)" ] && \
  source <(kubectl completion bash)

# npm
[ ! -z "$(which npm)" ] && \
  source <(npm completion)
# ------------------------------------------------------------
