"---------------------------------------------------
" setup vam
set nocompatible | filetype indent plugin on | syntax on

set t_Co=256

fun! SetupVAM()
  let c = get(g:, 'vim_addon_manager', {})
  let g:vim_addon_manager = c
  let c.plugin_root_dir = expand('$HOME', 1) . '/.vim/vim-addons'
  " most used options you may want to use:
  " let c.log_to_buf = 1
  " let c.auto_install = 0
  let &rtp.=(empty(&rtp)?'':',').c.plugin_root_dir.'/vim-addon-manager'
  if !isdirectory(c.plugin_root_dir.'/vim-addon-manager/autoload')
    execute '!git clone --depth=1 https://github.com/MarcWeber/vim-addon-manager '
        \       shellescape(c.plugin_root_dir.'/vim-addon-manager', 1)
  endif

  call vam#ActivateAddons([], {'auto_install' : 1})
endfun

redir! > /tmp/vim-$USER.log
silent! call SetupVAM()
silent! VAMActivate vim-twig matchit.zip indentLine vim-airline delimitMate unite vimproc vim-gitgutter github:jdonaldson/vaxe github:elubow/cql-vim github:sprsquish/thrift.vim github:uarun/vim-protobuf github:cstrahan/vim-capnp.git closetag github:fatih/vim-go.git YouCompleteMe UltiSnips github:jalcine/vim-swigjs github:marijnh/tern_for_vim
"---------------------------------------------------


"---------------------------------------------------
" special activations for ken-desktop
let hostname = substitute(system('hostname'), '\n', '', '')
if hostname == "ken-desktop"
  silent! VAMActivate phpcomplete github:m2mdas/phpcomplete-extended github:m2mdas/phpcomplete-extended-symfony github:m2mdas/phpcomplete-extended-laravel
endif
"---------------------------------------------------


"---------------------------------------------------
" enable status info for xterms
set title
"---------------------------------------------------


"---------------------------------------------------
" enable syntax highlighting
syntax on

" enable autocompletetion based on syntax files
autocmd FileType * exe('setl dict+='.$VIMRUNTIME.'/syntax/'.&filetype.'.vim')

" force specific syntax types for files
autocmd BufNewFile,BufRead *.twig set filetype=html.twig
autocmd BufNewFile,BufRead *.cql set filetype=cql
autocmd BufNewFile,BufRead *.thrift set filetype=thrift
autocmd BufNewFile,BufRead *.gradle set filetype=groovy
autocmd BufNewFile,BufRead *.re set filetype=c

filetype plugin on
"---------------------------------------------------


"---------------------------------------------------
" plugin settings

" indentLine settings
let g:indentLine_color_term = 111
let g:indentLine_color_gui = '#A4E57E'
"let g:indentLine_char = '|'

let delimitMate_expand_cr = 1

" airline settings
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

"set omnifunc=syntaxcomplete#Complete
let g:EclimCompletionMethod = 'omnifunc'
set completeopt-=preview

" vim-gitgutter settings
let g:gitgutter_sign_column_always = 1
highlight clear SignColumn

" youcompleteme settings
let g:ycm_extra_conf_globlist = ['~/src/sxengine/*', '~/src/cef/*', '~/src/anansi/*', '/usr/local/src/anansi/*', '/usr/local/src/dm*/*', '~/src/dm*/*', '~/src/ccrawl/*']
let g:ycm_semantic_triggers =  {
  \   'c' : ['->', '.'],
  \   'objc' : ['->', '.'],
  \   'ocaml' : ['.', '#'],
  \   'cpp,objcpp' : ['->', '.', '::'],
  \   'perl' : ['->'],
  \   'php' : ['->', '::'],
  \   'cs,java,javascript,d,vim,python,perl6,scala,vb,elixir,go' : ['.'],
  \   'ruby' : ['.', '::'],
  \   'lua' : ['.', ':'],
  \   'erlang' : [':'],
  \ }

"let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
"let g:ycm_enable_diagnostic_signs = 0

" go-vim settings
let g:go_fmt_command = "goimports"

" phpcomplete-extended settings
let g:phpcomplete_index_composer_command = '/usr/local/bin/composer'

" indentLine
let g:indentLine_faster = 1

"---------------------------------------------------


"---------------------------------------------------
" incremental search and highlight search results
set incsearch
"set showmatch
"set hlsearch
"---------------------------------------------------


"---------------------------------------------------
" disable bombs
set nobomb
"---------------------------------------------------



"---------------------------------------------------
" save info
set viminfo='50,\"1000,s100,:50,%,n~/.viminfo

" turn off modelines
set modelines=0

" ignore stuff
set wildignore=*.o,*.obj,*.bak,*.exe,*.swp

" enable autoindenting
set autoindent

" set tab display width
set tabstop=4
set shiftwidth=4
set expandtab

" set a really big undo history
set history=1024

" smarter search
set ignorecase
set smartcase

" apply substitutions globally on %s
set gdefault

" some random settings
set encoding=utf-8

" keep cursor in center of screen
set scrolloff=40
set autoindent
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2

"set visualbell
"set cursorline
set relativenumber

"set up undo information
if !isdirectory($HOME.'/.vimundo')
  silent !mkdir -p $HOME/.vimundo 2>&1 > /dev/null
  echo 'Created '.$HOME.'/.vimundo'
endif

set undodir=~/.vimundo
set undofile
"---------------------------------------------------


"---------------------------------------------------
" auto trim whitespace on save
"autocmd BufWritePre * normal mj <CR> :%s/\s\+$//e :normal `j
autocmd FileType cmake,c,cs,cpp,gradle,groovy,java,cql,sql,vcl,ice,php,javascript,css,html,perl,ruby,sh,python,gitcommit,gitconfig,git,xml,yml,yaml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))

"if hostname == "ken-desktop"
"  autocmd FileType java autocmd bufwritepre <buffer> :JavaImportOrganize
""  autocmd FileType java autocmd bufwritepost <buffer> :set syntax=java
"endif
"---------------------------------------------------


"---------------------------------------------------
" git blame
vmap gl :<C-U>!git blame <C-R>=expand("%:p") <CR> \| sed -n <C-R>=line("'<") <CR>,<C-R>=line("'>") <CR>p <CR>
"---------------------------------------------------


"---------------------------------------------------
" custom key mappings
" use tabs as well as %s for matching brackets
nnoremap <tab> %
vnoremap <tab> %

" remap ; to : to save on hitting shift
nnoremap ; :

" aoeui dhtns

" disable arrow keys
vnoremap <Up> <Nop>
vnoremap <Down> <Nop>
vnoremap <Left> <Nop>
vnoremap <Right> <Nop>
nnoremap <Up> <Nop>
nnoremap <Down> <Nop>
nnoremap <Left> <Nop>
nnoremap <Right> <Nop>

" swap ` and q
nnoremap ` q
nnoremap q `

" restore cursor movement
" put <down><up><right><left> on htns (--> hjkl)
nnoremap d h
vnoremap d h
nnoremap h j
vnoremap h j
nnoremap t k
vnoremap t k
nnoremap n l
vnoremap n l

" map s to nothing since i hit it accidentally too often
" map S to join lines
nnoremap s <Nop>
vnoremap s <Nop>
nnoremap S J
vnoremap S <Nop>

" put s on l key
nnoremap l s
vnoremap l s
nnoremap l s
vnoremap l s

" make HT do half page up/down
nnoremap H <C-D>
vnoremap H <C-D>
nnoremap T <C-U>
vnoremap T <C-U>

" since n has been taken over, put it on 'm'
nnoremap m n
vnoremap m n
nnoremap M N
vnoremap M N

" since dD has been taken over, use eE
" p>
nnoremap e d
vnoremap e d
nnoremap ee dd
vnoremap ee dd
nnoremap E C
vnoremap E C
nnoremap EE DD
vnoremap EE DD

" since eE has been taken over, use k
nnoremap k e
vnoremap k e
nnoremap K E
vnoremap K E
nnoremap j <Nop>
vnoremap j <Nop>
nnoremap J <Nop>
vnoremap J <Nop>

" When editing a file, always jump to the last cursor position and center that on the screen
"au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

autocmd FileType php setlocal omnifunc=phpcomplete_extended#CompletePHP
autocmd FileType html,xml,ruby,sh,javascript,yaml,sql setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab
autocmd BufEnter *.html,*.xml,*.js syntax sync fromstart
autocmd BufNewFile,BufRead *.groovy setlocal shiftwidth=2 tabstop=2 softtabstop=2 expandtab
autocmd BufNewFile,BufRead .*config,*.config,config setlocal filetype=gitconfig
autocmd BufNewFile,BufRead *.peg setlocal syntax=go
