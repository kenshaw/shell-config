# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# determine the platform
PLATFORM=`uname`

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
  # a case would tend to support setf rather than setaf.)
  color_prompt=yes
  else
  color_prompt=
  fi
fi

if [ "$color_prompt" = yes ]; then
  PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
  xterm*|rxvt*)
    #PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    PS1='\[\e]0;\u@\h: \w \a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    ;;
  *)
;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  #alias dir='dir --color=auto'
  #alias vdir='vdir --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# enable colors for os x
if [[ "$PLATFORM" == "Darwin" ]]; then
  alias ls='ls -G'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
  . /etc/bash_completion
fi

# add bash completion scripts
if [ -d ~/src/shell-config/env/bash-completion.d/ ]; then
  for i in ~/src/shell-config/env/bash-completion.d/*; do
    . $i
  done
fi

# source rvm if present
if [ -f ~/.rvm/scripts/rvm ]; then
 . ~/.rvm/scripts/rvm
fi

# do vi mode !
set -o vi

# default paths
export EDITOR=/etc/alternatives/editor
export JAVA_HOME=/usr/lib/jvm/default-java

# aws config stuff
if [ -e ~/.aws_access_key ]; then
  export AWS_ACCESS_KEY=`cat ~/.aws_access_key`
fi
if [ -e ~/.aws_secret_key ]; then
  export AWS_SECRET_KEY=`cat ~/.aws_secret_key`
fi

if [ -d ~/aws/ec2-api-tools/bin ]; then
  export EC2_URL=https://ap-southeast-1.ec2.amazonaws.com
  export EC2_HOME=~/aws/ec2-api-tools
  export PATH=$PATH:~/aws/ec2-api-tools/bin
fi

if [ -d ~/aws/iamcli/bin ]; then
  export AWS_CREDENTIAL_FILE=~/.aws_credentials
  export AWS_IAM_HOME=~/aws/iamcli
  export PATH=$PATH:~/aws/iamcli/bin
fi

# zeroc ice stuff
if [ -d "/opt/Ice-3.5.1/bin" ] ; then
  export PATH="$PATH:/opt/Ice-3.5.1/bin"
fi

# add maven path
if [ -d ~/src/maven/bin ]; then
  export PATH="$PATH:~/src/maven/bin"
fi

# add gradle path
if [ -d ~/src/gradle/bin ]; then
  export PATH="$PATH:~/src/gradle/bin"
fi

# add android-ndk
if [ -f ~/src/android-ndk/ndk-build ]; then
  export ANDROID_NDK_HOME=`readlink -f ~/src/android-ndk`
  export PATH="$PATH:$ANDROID_NDK_HOME"
fi

# add android sdk path
if [ -d ~/src/android-studio/sdk/tools ]; then
  export ANDROID_HOME=`readlink -f ~/src/android-studio/sdk`
  export PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools"
fi

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
